paper_title,value
abstract,"in this paper, we describe a search procedure for statistical machine translation (mt) based on dynamic programming (dp)."
abstract,"starting from a dp-based solution to the traveling salesman problem, we present a novel technique to restrict the possible word reordering between source and target language in order to achieve an eæcient search algorithm."
abstract,a search restriction especially useful for the translation direction from german to english is presented.
abstract,"the experimental tests are carried out on the verbmobil task (germanenglish, 8000-word vocabulary), which is a limited-domain spoken-language task."
Introduction,the goal of machine translation is the translation of a text given in some source language into a target language.
Introduction,"we are given a source string fj 1 = f1:::fj :::fj of length j, which is to be translated into a target string ei 1 = e1:::ei:::ei of length i"
Introduction,"among all possible target strings, we will choose the string with the highest probability: ^ei 1 = arg max ei 1 fpr(ei 1jfj 1 )g = arg max ei 1 fpr(ei 1) pr(fj 1 jei 1)g : (1) the argmax operation denotes the search problem, i.e"
Introduction,the generation of the output sentence in the target language.
Introduction,"pr(ei 1) is the language model of the target language, whereas pr(fj 1 jei1) is the transla tion model."
Introduction,our approach uses word-to-word dependencies between source and target words.
Introduction,"the model is often further restricted so that each source word is assigned to exactly one target word (brown et al., 1993; ney et al., 2000)."
Introduction,these alignment models are similar to the concept of hidden markov models (hmm) in speech recognition.
Introduction,the alignment mapping is j ! i = aj from source position j to target position i = aj
Introduction,"the use of this alignment model raises major problems if a source word has to be aligned to several target words, e.g"
Introduction,when translating german compound nouns.
Introduction,a simple extension will be used to handle this problem.
Introduction,"in section 2, we brie y review our approach to statistical machine translation."
Introduction,"in section 3, we introduce our novel concept to word reordering and a dp-based search, which is especially suitable for the translation direction from german to english."
Introduction,"this approach is compared to another reordering scheme presented in (berger et al., 1996)."
Introduction,"in section 4, we present the performance measures used and give translation results on the verbmobil task."
Basic Approach.,"in this section, we brie y review our translation approach."
Basic Approach.,"(1), pr(ei 1) is the language model, which is a trigram language model in this case."
Basic Approach.,"for the translation model pr(fj 1 jei 1), we go on the assumption that each source word is aligned to exactly one target word."
Basic Approach.,"the alignment model uses two kinds of parameters: alignment probabilities p(aj jaj􀀀1; i; j), where the probability of alignment aj for position j depends on the previous alignment position aj􀀀1 (ney et al., 2000) and lexicon probabilities p(fj jeaj )."
Basic Approach.,"when aligning the words in parallel texts (for language pairs like spanishenglish, french-english, italiangerman,...), we typically observe a strong localization effect."
Basic Approach.,"in many cases, there is an even stronger restriction: over large portions of the source string, the alignment is monotone."
Basic Approach.,2.1 inverted alignments.
Basic Approach.,"to explicitly handle the word reordering between words in source and target language, we use the concept of the so-called inverted alignments as given in (ney et al., 2000)."
Basic Approach.,an inverted alignment is defined as follows: inverted alignment: i ! j = bi: target positions i are mapped to source positions bi.
Basic Approach.,what is important and is not expressed by the notation is the so-called coverage constraint: each source position j should be 'hit' exactly once by the path of the inverted alignment bi 1 = b1:::bi:::bi
Basic Approach.,"using the inverted alignments in the maximum approximation, we obtain as search criterion: max i (p(jji) max ei 1 ( i yi=1 p(eijei􀀀1 i􀀀2) max bi 1 i yi=1 [p(bijbi􀀀1; i; j) p(fbi jei)])) = = max i (p(jji) max ei 1;bi 1 ( i yi=1 p(eijei􀀀1 i􀀀2) p(bijbi􀀀1; i; j) p(fbi jei)])); where the two products over i have been merged into a single product over i"
Basic Approach.,p(eijei􀀀1 i􀀀2) is the trigram language model probability.
Basic Approach.,the inverted alignment probability p(bijbi􀀀1; i; j) and the lexicon probability p(fbi jei) are obtained by relative frequency estimates from the viterbi alignment path after the final training iteration.
Basic Approach.,"the details are given in (och and ney, 2000)."
Basic Approach.,the sentence length probability p(jji) is omitted without any loss in performance.
Basic Approach.,"for the inverted alignment probability p(bijbi􀀀1; i; j), we drop the dependence on the target sentence length i"
Basic Approach.,2.2 word joining.
Basic Approach.,"the baseline alignment model does not permit that a source word is aligned to two or more target words, e.g"
Basic Approach.,"for the translation direction from german toenglish, the german compound noun 'zahnarztter min' causes problems, because it must be translated by the two target words dentist's appointment."
Basic Approach.,"we use a solution to this problem similar to the one presented in (och et al., 1999), where target words are joined during training."
Basic Approach.,the word joining is done on the basis of a likelihood criterion.
Basic Approach.,"an extended lexicon model is defined, and its likelihood is compared to a baseline lexicon model, which takes only single-word dependencies into account."
Basic Approach.,"when 'zahnarzttermin' is aligned to dentist's, the extended lexicon model might learn that 'zahnarzttermin' actuallyhas to be aligned to both dentist's and ap pointment."
Basic Approach.,"in the following, we assume that this word joining has been carried out."
DP Algorithm for Statistical.,machine translation in this case my colleague can not visit on i n d i e s e m f a l l ka nn m e i n k o l l e g e a m the v i e r t e n m a i n i c h t b e s u c h e n s i e you fourth of may figure 1: reordering for the german verbgroup.
DP Algorithm for Statistical.,"in order to handle the necessary word reordering as an optimization problem within our dynamic programming approach, we describe a solution to the traveling salesman problem (tsp) which is based on dynamic programming (held, karp, 1962)."
DP Algorithm for Statistical.,the traveling salesman problem is an optimization problem which is defined as follows: given are a set of cities s = s1; ; sn and for each pair of cities si; sj the cost dij > 0 for traveling from city si to city sj
DP Algorithm for Statistical.,we are looking for the shortest tour visiting all cities exactly once while starting and ending in city s1.
DP Algorithm for Statistical.,a straightforward way to find the shortest tour is by trying all possible permutations of the n cities.
DP Algorithm for Statistical.,the resulting algorithm has a complexity of o(n!).
DP Algorithm for Statistical.,"however, dynamic programming can be used to find the shortest tour in exponential time, namely in o(n22n), using the algorithm by held and karp."
DP Algorithm for Statistical.,"the approach recursively evaluates a quantity q(c; j), where c is the set of already visited cities and sj is the last visited city."
DP Algorithm for Statistical.,subsets c of increasing cardinality c are processed.
DP Algorithm for Statistical.,the algorithm works due to the fact that not all permutations of cities have to be considered explicitly.
DP Algorithm for Statistical.,"for a given partial hypothesis (c; j), the order in which the cities in c have been visited can be ignored (except j), only the score for the best path reaching j has to be stored."
DP Algorithm for Statistical.,this algorithm can be applied to statistical machine translation.
DP Algorithm for Statistical.,"using the concept of inverted alignments, we explicitly take care of the coverage constraint by introducing a coverage set c of source sentence positions that have been already processed."
DP Algorithm for Statistical.,the advantage is that we can recombine search hypotheses by dynamic programming.
DP Algorithm for Statistical.,the cities of the traveling salesman problem correspond to source table 1: dp algorithm for statistical machine translation.
DP Algorithm for Statistical.,"input: source string f1:::fj :::fj initialization for each cardinality c = 1; 2; ; j do for each pair (c; j), where j 2 c and jcj = c do for each target word e 2 e qe0 (e; c; j) = p(fj je) max æ;e00 j02cnfjg fp(jjj0; j) p(æ) pæ(eje0; e00) qe00 (e0;c n fjg; j0)g words fj in the input string of length j"
DP Algorithm for Statistical.,for the final translation each source position is considered exactly once.
DP Algorithm for Statistical.,subsets of partial hypotheses with coverage sets c of increasing cardinality c are processed.
DP Algorithm for Statistical.,"for a trigram language model, the partial hypotheses are of the form (e0; e; c; j)."
DP Algorithm for Statistical.,"e0; e are the last two target words, c is a coverage set for the already covered source positions and j is the last position visited."
DP Algorithm for Statistical.,"each distance in the traveling salesman problem now corresponds to the negative logarithm of the product of the translation, alignment and language model probabilities."
DP Algorithm for Statistical.,"the following auxiliary quantity is defined: qe0 (e; c; j) := probability of the best partial hypothesis (ei 1; bi 1), where c = fbkjk = 1; ; ig, bi = j, ei = e and ei􀀀1 = e0."
DP Algorithm for Statistical.,"the type of alignment we have considered so far requires the same length for source and target sentence, i.e"
DP Algorithm for Statistical.,"evidently, this is an unrealistic assumption, therefore we extend the concept of inverted alignments as follows: when adding a new position to the coverage set c, we might generate either æ = 0 or æ = 1 new target words."
DP Algorithm for Statistical.,"for æ = 1, a new target language word is generated using the trigram language model p(eje0; e00)."
DP Algorithm for Statistical.,"for æ = 0, no new target word is generated, while an additional source sentence position is covered."
DP Algorithm for Statistical.,a modified language model probability pæ(eje0; e00) is defined as follows: pæ(eje0; e00) =  1:0 if æ = 0 p(eje0; e00) if æ = 1 : we associate a distribution p(æ) with the two cases æ = 0 and æ = 1 and set p(æ = 1) = 0:7.
DP Algorithm for Statistical.,the above auxiliary quantity satisfies the following recursive dp equation: qe0 (e; c; j) = initial skip verb final 1.
DP Algorithm for Statistical.,kann 7.nicht 8.
DP Algorithm for Statistical.,figure 2: order in which source positions are visited for the example given in fig.1.
DP Algorithm for Statistical.,= p(fj je) max æ;e00 j02cnfjg np(jjj0; j) p(æ) pæ(eje0; e00) qe00 (e0;c n fjg; j 0 )o: the dp equation is evaluated recursively for each hypothesis (e0; e; c; j).
DP Algorithm for Statistical.,the resulting algorithm is depicted in table 1.
DP Algorithm for Statistical.,"the complexity of the algorithm is o(e3 j2 2j), where e is the size of the target language vocabulary."
DP Algorithm for Statistical.,3.1 word reordering with verbgroup.
DP Algorithm for Statistical.,restrictions: quasi-monotone search the above search space is still too large to allow the translation of a medium length input sentence.
DP Algorithm for Statistical.,"on the other hand, only very restricted reorderings are necessary, e.g"
DP Algorithm for Statistical.,for the translation direction from table 2: coverage set hypothesis extensions for the ibm reordering.
DP Algorithm for Statistical.,no: predecessor coverage set successor coverage set 1 (f1; ;mg n flg ; l0) !
DP Algorithm for Statistical.,(f1; ;mg ; l) 2 (f1; ;mg n fl; l1g ; l0) !
DP Algorithm for Statistical.,(f1; ;mg n fl1g ; l) 3 (f1; ;mg n fl; l1; l2g ; l0) !
DP Algorithm for Statistical.,(f1; ;mg n fl1; l2g ; l) 4 (f1; ;m 􀀀 1g n fl1; l2; l3g ; l0) !
DP Algorithm for Statistical.,(f1; ;mg n fl1; l2; l3g ;m) german to english the monotonicity constraint is violated mainly with respect to the german verbgroup.
DP Algorithm for Statistical.,"in german, the verbgroup usually consists of a left and a right verbal brace, whereas in english the words of the verbgroup usually form a sequence of consecutive words."
DP Algorithm for Statistical.,"our new approach, which is called quasi-monotone search, processes the source sentence monotonically, while explicitly taking into account the positions of the german verbgroup."
DP Algorithm for Statistical.,a typical situation is shown in figure 1.
DP Algorithm for Statistical.,"when translating the sentence monotonically from left to right, the translation of the german finite verb 'kann', which is the left verbal brace in this case, is postponed until the german noun phrase 'mein kollege' is translated, which is the subject of the sentence."
DP Algorithm for Statistical.,"then, the german infinitive 'besuchen' and the negation particle 'nicht' are translated."
DP Algorithm for Statistical.,"the translation of one position in the source sentence may be postponed for up to l = 3 source positions, and the translation of up to two source positions may be anticipated for at most r = 10 source positions."
DP Algorithm for Statistical.,"to formalize the approach, we introduce four verbgroup states s: initial (i): a contiguous, initial block of source positions is covered."
DP Algorithm for Statistical.,skipped (k): the translation of up to one word may be postponed
DP Algorithm for Statistical.,verb (v): the translation of up to two words may be anticipated.
DP Algorithm for Statistical.,final (f): the rest of the sentence is processed monotonically taking account of the already covered positions.
DP Algorithm for Statistical.,"while processing the source sentence monotonically, the initial state i is entered whenever there are no uncovered positions to the left of the rightmost covered position."
DP Algorithm for Statistical.,the sequence of states needed to carry out the word reordering example in fig.
DP Algorithm for Statistical.,1 is given in fig.
DP Algorithm for Statistical.,the 13 positions of the source sentence are processed in the order shown.
DP Algorithm for Statistical.,a position is presented by the word at that position.
DP Algorithm for Statistical.,"using these states, we define partial hypothesis extensions, which are of the following type: (s0;c n fjg; j0) !"
DP Algorithm for Statistical.,"(s; c; j); not only the coverage set c and the positions j; j0, but also the verbgroup states s; s0 are taken into account."
DP Algorithm for Statistical.,"to be short, we omit the target words e; e0 in the formulation of the search hypotheses."
DP Algorithm for Statistical.,there are 13 types of extensions needed to describe the verbgroup reordering.
DP Algorithm for Statistical.,"the details are given in (tillmann, 2000)."
DP Algorithm for Statistical.,for each extension a new position is added to the coverage set.
DP Algorithm for Statistical.,"covering the first uncovered position in the source sentence, we use the language model probability p(ej$; $)."
DP Algorithm for Statistical.,"here, $ is the sentence boundary symbol, which is thought to be at position 0 in the target sentence."
DP Algorithm for Statistical.,the search starts in the hypothesis (i; f;g; 0).
DP Algorithm for Statistical.,"f;g denotes the empty set, where no source sentence position is covered."
DP Algorithm for Statistical.,the following recursive equation is evaluated: qe0 (e; s; c; j) = (2) = p(fj je) max æ;e00 np(jjj0; j) p(æ) pæ(eje0; e00) max (s0;j0) (s0 ;cnfjg;j0)!(s;c;j) j02cnfjg qe00 (e0; s0;c n fjg; j0)o: the search ends in the hypotheses (i; f1; ; jg; j).
DP Algorithm for Statistical.,f1; ; jg denotes a coverage set including all positions from the starting position 1 to position j and j 2 fj 􀀀l; ; jg.
DP Algorithm for Statistical.,"the final score is obtained from: max e;e0 j2fj􀀀l;;jg p($je; e0) qe0 (e; i; f1; ; jg; j); where p($je; e0) denotes the trigram language model, which predicts the sentence boundary $ at the end of the target sentence."
DP Algorithm for Statistical.,the complexity of the quasimonotone search is o(e3 j (r2+lr)).
DP Algorithm for Statistical.,"the proof is given in (tillmann, 2000)."
DP Algorithm for Statistical.,3.2 reordering with ibm style.
DP Algorithm for Statistical.,"restrictions we compare our new approach with the word reordering used in the ibm translation approach (berger et al., 1996)."
DP Algorithm for Statistical.,a detailed description of the search procedure used is given in this patent.
DP Algorithm for Statistical.,"source sentence words are aligned with hypothesized target sentence words, where the choice of a new source word, which has not been aligned with a target word yet, is restricted1."
DP Algorithm for Statistical.,"a procedural definition to restrict1in the approach described in (berger et al., 1996), a mor phological analysis is carried out and word morphemes rather than full-form words are used during the search."
DP Algorithm for Statistical.,"here, we process only full-form words within the translation procedure."
DP Algorithm for Statistical.,the number of permutations carried out for the word reordering is given.
DP Algorithm for Statistical.,"during the search process, a partial hypothesis is extended by choosing a source sentence position, which has not been aligned with a target sentence position yet."
DP Algorithm for Statistical.,"only one of the first n positions which are not already aligned in a partial hypothesis may be chosen, where n is set to 4."
DP Algorithm for Statistical.,the restriction can be expressed in terms of the number of uncovered source sentence positions to the left of the rightmost position m in the coverage set.
DP Algorithm for Statistical.,this number must be less than or equal to n 􀀀 1.
DP Algorithm for Statistical.,"otherwise for the predecessor search hypothesis, we would have chosen a position that would not have been among the first n uncovered positions."
DP Algorithm for Statistical.,"ignoring the identity of the target language words e and e0, the possible partial hypothesis extensions due to the ibm restrictions are shown in table 2."
DP Algorithm for Statistical.,"in general, m; l; l0 6= fl1; l2; l3g and in line umber 3 and 4, l0 must be chosen not to violate the above reordering restriction."
DP Algorithm for Statistical.,note that in line 4 the last visited position for the successor hypothesis must be m
DP Algorithm for Statistical.,"otherwise , there will be four uncovered positions for the predecessor hypothesis violating the restriction."
DP Algorithm for Statistical.,a dynamic programming recursion similar to the one in eq
DP Algorithm for Statistical.,2 is evaluated.
DP Algorithm for Statistical.,"in this case, we have no finite-state restrictions for the search space."
DP Algorithm for Statistical.,"the search starts in hypothesis (f;g; 0) and ends in the hypotheses (f1; ; jg; j), with j 2 f1; ; jg."
DP Algorithm for Statistical.,this approach leads to a search procedure with complexity o(e3 j4).
DP Algorithm for Statistical.,"the proof is given in (tillmann, 2000)."
Experimental Results.,4.1 the task and the corpus.
Experimental Results.,we have tested the translation system on the verbmobil task (wahlster 1993).
Experimental Results.,the verbmobil task is an appointment scheduling task.
Experimental Results.,two subjects are each given a calendar and they are asked to schedule a meeting.
Experimental Results.,the translation direction is from german to english.
Experimental Results.,a summary of the corpus used in the experiments is given in table 3.
Experimental Results.,the perplexity for the trigram language model used is 26:5.
Experimental Results.,"although the ultimate goal of the verbmobil project is the translation of spoken language, the input used for the translation experiments reported on in this paper is the (more or less) correct orthographic transcription of the spoken sentences."
Experimental Results.,"thus, the effects of spontaneous speech are present in the corpus, e.g"
Experimental Results.,"the syntactic structure of the sentence is rather less restricted, however the effect of speech recognition errors is not covered."
Experimental Results.,"for the experiments, we use a simple preprocessing step."
Experimental Results.,german city names are replaced by category markers.
Experimental Results.,the translation search is carried out with the category markers and the city names are resubstituted into the target sentence as a postprocessing step.
Experimental Results.,table 3: training and test conditions for the verbmobil task (*number of words without punctuation marks).
Experimental Results.,german english training: sentences 58 073 words 519 523 549 921 words* 418 979 453 632 vocabulary size 7939 4648 singletons 3454 1699 test-147: sentences 147 words 1 968 2 173 perplexity { 26:5 table 4: multi-reference word error rate (mwer) and subjective sentence error rate (sser) for three different search procedures.
Experimental Results.,search cpu time mwer sser method [sec] [%] [%] mons 0:9 42:0 30:5 qms 10:6 34:4 23:8 ibms 28:6 38:2 26:2 4.2 performance measures.
Experimental Results.,the following two error criteria are used in our experiments: mwer: multi-reference wer: we use the levenshtein distance between the automatic translation and several reference translations as a measure of the translation errors.
Experimental Results.,"on average, 6 reference translations per automatic translation are available."
Experimental Results.,"the levenshtein distance between the automatic translation and each of the reference translations is computed, and the minimum levenshtein distance is taken."
Experimental Results.,this measure has the advantage of being completely automatic.
Experimental Results.,"sser: subjective sentence error rate: for a more detailed analysis, the translations are judged by a human test person."
Experimental Results.,"for the error counts, a range from 0:0 to 1:0 is used."
Experimental Results.,"an error count of 0:0 is assigned to a perfect translation, and an error count of 1:0 is assigned to a semantically and syntactically wrong translation."
Experimental Results.,4.3 translation experiments.
Experimental Results.,"for the translation experiments, eq"
Experimental Results.,2 is recursively evaluated.
Experimental Results.,we apply a beam search concept as in speech recognition.
Experimental Results.,however there is no global pruning.
Experimental Results.,search hypotheses are processed separately according to their coverage set c
Experimental Results.,the best scored hypothesis for each coverage set is computed: qbeam(c) = max e;e0 ;s;j qe0 (e; s; c; j) the hypothesis (e0; e; s; c; j) is pruned if: qe0 (e; s; c; j) < t0 qbeam(c); where t0 is a threshold to control the number of surviving hypotheses.
Experimental Results.,"additionally, for a given coverage set, at most 250 different hypotheses are kept during the search process, and the number of different words to be hypothesized by a source word is limited."
Experimental Results.,"for each source word f, the list of its possible translations e is sorted according to p(fje) puni(e), where puni(e) is the unigram probability of the english word e"
Experimental Results.,it is suæcient to consider only the best 50 words.
Experimental Results.,"we show translation results for three approaches: the monotone search (mons), where no word reordering is allowed (tillmann, 1997), the quasimonotone search (qms) as presented in this paper and the ibm style (ibms) search as described in section 3.2."
Experimental Results.,table 4 shows translation results for the three approaches.
Experimental Results.,the computing time is given in terms of cpu time per sentence (on a 450mhz pentiumiiipc).
Experimental Results.,"here, the pruning threshold t0 = 10:0 is used."
Experimental Results.,translation errors are reported in terms of multireference word error rate (mwer) and subjective sentence error rate (sser).
Experimental Results.,the monotone search performs worst in terms of both error rates mwer and sser.
Experimental Results.,"the computing time is low, since no reordering is carried out."
Experimental Results.,the quasi-monotone search performs best in terms of both error rates mwer and sser.
Experimental Results.,"additionally, it works about 3 times as fast as the ibm style search."
Experimental Results.,"for our demonstration system, we typically use the pruning threshold t0 = 5:0 to speed up the search by a factor 5 while allowing for a small degradation in translation accuracy."
Experimental Results.,the effect of the pruning threshold t0 is shown in table 5.
Experimental Results.,"the computing time, the number of search errors, and the multi-reference wer (mwer) are shown as a function of t0."
Experimental Results.,the negative logarithm of t0 is reported.
Experimental Results.,the translation scores for the hypotheses generated with different threshold values t0 are compared to the translation scores obtained with a conservatively large threshold t0 = 10:0
Experimental Results.,"for each test series, we count the number of sentences whose score is worse than the corresponding score of the test series with the conservatively large threshold t0 = 10:0, and this number is reported as the number of search errors."
Experimental Results.,"depending on the threshold t0, the search algorithm may miss the globally optimal path which typically results in additional translation errors."
Experimental Results.,decreasing the threshold results in higher mwer due to additional search errors.
Experimental Results.,table 5: effect of the beam threshold on the number of search errors (147 sentences).
Experimental Results.,search t0 cpu time #search mwer method [sec] error [%] qms 0.0 0.07 108 42:6 1.0 0.13 85 37:8 2.5 0.35 44 36:6 5.0 1.92 4 34:6 10.0 10.6 0 34:5 ibms 0.0 0.14 108 43:4 1.0 0.3 84 39:5 2.5 0.8 45 39:1 5.0 4.99 7 38:3 10.0 28.52 0 38:2 table 6 shows example translations obtained by the three different approaches.
Experimental Results.,"again, the monotone search performs worst."
Experimental Results.,"in the second and third translation examples, the ibms word reordering performs worse than the qms word reordering, since it can not take properly into account the word reordering due to the german verbgroup."
Experimental Results.,the german finite verbs 'bin' (second example) and 'konnten' (third example) are too far away from the personal pronouns 'ich' and 'sie' (6 respectively 5 source sentence positions).
Experimental Results.,"in the last example, the less restrictive ibms word reordering leads to a better translation, although the qms translation is still acceptable."
Conclusion.,"in this paper, we have presented a new, eæcient dp-based search procedure for statistical machine translation."
Conclusion.,the approach assumes that the word reordering is restricted to a few positions in the source sentence.
Conclusion.,the approach has been successfully tested on the 8 000-word verbmobil task.
Conclusion.,"future extensions of the system might include: 1) an extended translation model, where we use more context to predict a source word."
Conclusion.,"2) an improved language model, which takes into account syntactic structure, e.g"
Conclusion.,to ensure that a proper english verbgroup is generated.
Conclusion.,3) a tight coupling with the speech recognizer output.
Acknowledgements,"this work has been supported as part of the verbmobil project (contract number 01 iv 601 a) by the german federal ministry of education, science, research and technology and as part of the eutrans project (esprit project number 30268) by the european community."
Acknowledgements,table 6: example translations for the verbmobil task.
Acknowledgements,"input: ja , wunderbar"
Acknowledgements,konnen wir machen
Acknowledgements,"mons: yes, wonderful."
Acknowledgements,"qms: yes, wonderful."
Acknowledgements,we can do that
Acknowledgements,"ibms: yes, wonderful."
Acknowledgements,we can do that
Acknowledgements,"input: das ist zu knapp , weil ich ab dem dritten in kaiserslautern bin"
Acknowledgements,genaugenommen nur am dritten
Acknowledgements,"wie ware es denn am ahm samstag , dem zehnten februar ? mons: that is too tight , because i from the third in kaiserslautern"
Acknowledgements,in fact only on the third
Acknowledgements,"how about ahm saturday , the tenth of february ? qms: that is too tight , because i am from the third in kaiserslautern"
Acknowledgements,in fact only on the third
Acknowledgements,"ahm how about saturday , february the tenth ? ibms: that is too tight , from the third because i will be in kaiserslautern"
Acknowledgements,in fact only on the third
Acknowledgements,"ahm how about saturday , february the tenth ? input: wenn sie dann noch den siebzehnten konnten , ware das toll , ja"
Acknowledgements,"mons: if you then also the seventeenth could , would be the great , yes"
Acknowledgements,"qms: if you could then also the seventeenth , that would be great , yes"
Acknowledgements,"ibms: then if you could even take seventeenth , that would be great , yes"
Acknowledgements,"input: ja , das kommt mir sehr gelegen"
Acknowledgements,machen wir es dann am besten so
Acknowledgements,"mons: yes , that suits me perfectly"
Acknowledgements,do we should best like that
Acknowledgements,"qms: yes , that suits me fine"
Acknowledgements,we do it like that then best
Acknowledgements,"ibms: yes , that suits me fine"
Acknowledgements,we should best do it like that .
